$height : 30px;
$titleHeight: 53px;
$consoleWidth: 500px;

.console{
  height      : 100%;
  width       : 100%;
  overflow    : hidden;
  border      : 1px solid $lightBorderColor;
  background-color: white;
  border-radius: $borderRadius;

  @include transition(all 250ms ease);

  .title{
    padding         : $padding;
    border-bottom   : 1px solid $lightBorderColor;
    height          : $titleHeight;

    @extend .resize-container;
    .status{
      float   : right;
      width   : 100%;
      position: relative;
      height    : $height;
      line-height  : $height;

      .bar{
        position: absolute;
        top     : 0;
        left    : 0;
        display : block;
        height  : 100%;
        width   : 100%;
        border  : 1px solid $lightBorderColor;

        border-radius   : $borderRadius;
        .progress{
          display: block;
          width: 100%;
          height: 100%;
          background-color: $playColor;
          @include transformOrigin(0 0);
          @include transition(transform $observableDuration ease);
        }
      }
      .counts{
        position: relative;
        float: left;
        padding-left: $padding;
        color: rgba(0, 0, 0, 0.5);
      }
    }
  }
  .output{
    display     : block;
    width       : 100%;
    height      : calc(100% - #{$titleHeight});
    border-radius: 0px;
    border      : none;
    padding     : 0px;
    overflow    : auto;

    .scenarios {
      @extend .undo-list;
      .scenario{
        display: block;
        @include transition(all $observableDuration ease);

        .overview{
          @extend .resize-container;
          padding: $padding;
          border-bottom: 1px solid $lightBorderColor;

          .status, .name{
            float: left;
          }
          .status{
            padding: 0px $padding/2;
            text-align: center;
            line-height: inherit;
            @extend .fa;
          }
          .toggle{
            float: right;
            padding: 5px;
            background-color: transparent;
            outline: none;
            border: none;
            @include transition(transform $quickDuration ease);
          }
        }

        .detail{
          @extend .undo-list;
          max-height: 0px;
          overflow  : hidden;
          color     : rgba(0,0,0,0.34);
          font-size: small;
          border-bottom: 1px solid $lightBorderColor;
          opacity   : 0;
          @include transition(#{max-height $quickDuration ease, opacity $quickDuration ease});

          $labelWidth: 70px;
          > li{
            @extend .resize-container;
            padding: $padding $padding $padding $padding*2;
          }

          .value, label{
            float: left;
          }
          .value{
            width: calc(100% - #{$labelWidth + 4px});;
          }
          label{
            width: $labelWidth;
          }
        }
       }
      }
      .scenario.show-detail{
        .overview{
          .toggle{
            @include transform(rotate(90deg));
          }
        }
        .detail{
          max-height: 100vh;
          opacity   : 1;
        }
      }
      .scenario.success{
        .overview{
          color: rgba(0, 0, 0, 0.27);
          .status{
            color: $playColor;
            @extend .fa-check;
          }
        }
      }
    .scenario:not(.success){
      .overview{
        .status{
          color: $dangerColor;
          @extend .fa-exclamation;
        }
      }
    }
    }

}

.console:not(.show){
  opacity: 0;
  @include transform(translateX(calc(100% + 100px)));
}